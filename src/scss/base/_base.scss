@use '../abstracts/colors' as clr;
@use '../abstracts/typography' as typ;

:root {
  @each $color, $value in clr.$colors {
    --clr-#{$color}: #{$value};
  }
  --family: #{typ.$font-family};
  @each $font-size, $value in typ.$font-sizes {
    --#{$font-size}: #{$value};
  }
  @each $font-weight, $value in typ.$font-weights {
    --#{$font-weight}: #{$value};
  }
}

*,
*::before,
*::after {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

body {
  line-height: 1.5;
  letter-spacing: 0.5px;
  font-family: var(--family);
  max-width: 1200px;
  margin: 0 auto;
}

header {
  padding: 1rem;
  display: flex;
  flex-direction: column;
  align-items: center;

  & > * {
    margin: 1rem 0;
  }
}

.grid {
  padding: 2em;
  display: grid;
  grid-auto-rows: 1fr;
  grid-gap: 0.75em;
  grid-template-areas: "c1";
}

form {
  width: 100%;
}

.img-container {
  background-image: url("https://image.flaticon.com/icons/svg/33/33736.svg");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  width: 50px;
  height: 35px;
  margin: 0 1rem;
  border: 1px solid var(--clr-neutral-300);
}

.icon {
  max-width: 100px;

  &--flag {
    width: 3rem;
    height: 100%;
    max-width: 100%;
    object-fit: cover;
  }
}

.input {
  width: 100%;
  padding: 1rem;
  border: 1px solid var(--clr-neutral-400);
  outline: none;
  border-radius: 1.5rem;
  transition: border 0.3s, box-shadow 0.3s;
  &:focus {
    border: 1px solid var(--clr-neutral-600);
  }
}

::placeholder {
  color: var(--clr-neutral-500);
  letter-spacing: 0.5px;
  font-weight: inherit;
}

li {
  list-style-type: none;
}

@media only screen and (min-width: 600px) {
  header {
    padding: 2rem;
    flex-direction: row;
    justify-content: space-evenly;
    align-items: flex-end;
  }
  form {
    width: 60%;
  }
}

@media only screen and (min-width: 1100px) {
  .grid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
    grid-template-areas:
      "c1 c2"
      "c3 c4";
  }
}
